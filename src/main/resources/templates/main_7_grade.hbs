<!doctype html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>이수 성적</title>
    <link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="css/samstyle.css">
    <link rel="stylesheet" type="text/css" href="css/jquery.fullpage.css">
    <link rel="stylesheet" type="text/css" href="css/css-circular-prog-bar.css">
    <link href="https://fonts.googleapis.com/css?family=Noto+Sans+KR" rel="stylesheet">

    <link href="https://fonts.googleapis.com/css?family=Noto+Sans+KR:900&display=swap&subset=korean" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Black+Han+Sans&display=swap&subset=korean" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Do+Hyeon&display=swap" rel="stylesheet">

    <script type='text/javascript' src='js/jquery.min.js'></script>
    <script type='text/javascript' src='js/jquery.autocomplete.min.js'></script>
    <script type='text/javascript' src="js/bootstrap.min.js"></script>
    <script type='text/javascript' src="js/jquery.fullpage.js"></script>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type='text/javascript' src='js/mainpage.js'></script>


    <link href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,700' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">


    <style>
        /* NOTE: The styles were added inline because Prefixfree needs access to your styles and they must be inlined if they are on local disk! */
        
        *,
         :before,
         :after {
            box-sizing: border-box;
        }
        
        .unstyled {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        
        .unstyled a {
            text-decoration: none;
        }
        
        .list-inline {
            overflow: hidden;
        }
        
        .list-inline li {
            float: left;
        }
        
        .header {
            /*
            position: fixed;
            left: 0;
            top: 0;
            bottom: 0;*/
            width: 17.5em;
            background: #35302D;
        }
        
         .main-nav ul {
            border-top: solid 1px #3C3735;
        }
        
        .main-nav li {
            border-bottom: solid 1px #3C3735;
        }
        
        .main-nav a {
            padding: 1.1em 0;
            color: #DFDBD9;
            font: 400 1.125em "Source Sans Pro", Helvetica, Arial, sans-serif;
            text-align: center;
            text-transform: lowercase;
        }
        
        .main-nav a:hover {
            color: #fff;
        }
        
        .list-hover-slide li {
            position: relative;
            overflow: hidden;
        }
        
        .list-hover-slide a {
            display: block;
            position: relative;
            z-index: 1;
            transition: .35s ease color;
        }
        
        .list-hover-slide a:before {
            content: '';
            display: block;
            z-index: -1;
            position: absolute;
            left: -100%;
            top: 0;
            width: 100%;
            height: 100%;
            border-right: solid 5px #BE354D;
            background: #3C3735;
            transition: .35s ease left;
        }
        
        .list-hover-slide a.is-current:before,
        .list-hover-slide a:hover:before {
            left: 0;
        }

        /* 수정 동그라미*/

        .counter {
            display: inline-flex;
            cursor: pointer;
            width: 300px;
            height: 300px;
            max-width: 100%;
            position: relative;
            justify-content: center;
            align-items: center;
            font-size: calc(1em + 1vmin);
            transition: height .2s ease-in-out;
            background: #fff;
            border-radius: 50%;
            box-shadow: 0px 1px 10px 2px rgba(0, 0, 0, 0.2);
            margin: 1em 0;
        }

        .counter2 {
            display: inline-flex;
            cursor: pointer;
            width: 300px;
            height: 300px;
            max-width: 100%;
            position: relative;
            justify-content: center;
            align-items: center;
            font-size: calc(1em + 1vmin);
            transition: height .2s ease-in-out;
            background: #fff;
            border-radius: 50%;
            box-shadow: 0px 1px 10px 2px rgba(0, 0, 0, 0.2);
            margin: 1em 0;
        }

        .counter3 {
            display: inline-flex;
            cursor: pointer;
            width: 300px;
            height: 300px;
            max-width: 100%;
            position: relative;
            justify-content: center;
            align-items: center;
            font-size: calc(1em + 1vmin);
            transition: height .2s ease-in-out;
            background: #fff;
            border-radius: 50%;
            box-shadow: 0px 1px 10px 2px rgba(0, 0, 0, 0.2);
            margin: 1em 0;
        }

        .counter4 {
            display: inline-flex;
            cursor: pointer;
            width: 300px;
            height: 300px;
            max-width: 100%;
            position: relative;
            justify-content: center;
            align-items: center;
            font-size: calc(1em + 1vmin);
            transition: height .2s ease-in-out;
            background: #fff;
            border-radius: 50%;
            box-shadow: 0px 1px 10px 2px rgba(0, 0, 0, 0.2);
            margin: 1em 0;
        }

        .percentage {
            position: absolute;
            text-align: center;
            top: 50%;
            left: 0;
            right: 0;
            vertical-align: middle;
            transform: translate3d(0, -50%, 0);
        }

        canvas {
            position: absolute;
            top: 0;
            left: 0;
        }

        input {
            width: 200px;
        }
    </style>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/prefixfree/1.0.7/prefixfree.min.js"></script>
</head>

<body>
    <div id="fullpage">
        <div class="book-container section">
            <div class="row slide">
                    {{#GradeGraph}}
                <h1 class="highlight"><span>이수 성적</span></h1>
                <div class="container">
                    <div class="col-md-12">
                        <div class="bg-style">
                            <div class="wrapper">
                                <div class="row pt-5 pb-5">
                                    <div class="col-6 col-sm-3">
                                        <h4 align="center">학점</h4>
                                        <div class="counter" data-cp-percentage="{{totalGrade}}" data-cp-color="#be354d">
                                        </div>


                                    </div>
                                    <div class="col-6 col-sm-3">
                                        <h4 align="center">전필</h4>
                                        <div class="counter2" data-cp-percentage="{{core}}" data-cp-color="#be354d"></div>


                                    </div>
                                    <div class="col-6 col-sm-3">
                                        <h4 align="center">전선</h4>
                                        <div class="counter3" data-cp-percentage="{{elective}}" data-cp-color="#be354d"></div>



                                    </div>
                                    <div class="col-6 col-sm-3">
                                        <h4 align="center">C인증시험</h4>
                                        <div class="counter4" data-cp-percentage="{{ctest}}" data-cp-color="#be354d"></div>
                                    </div>
                                </div>
                            </div>
                            <button class="btn-update" style="visibility:hidden;"></button>
                        </div>
                    </div>
                        {{/GradeGraph}}
                    <br><br><br>
                    <div class="col-md-12">
                        <div class="col-md-3 header">
                            <div class="nav-wrap">
                                <nav class="main-nav" role="navigation">
                                    <ul class="unstyled list-hover-slide">
                                        <li><a class="menuLink" href="grade_credit_majorCore.hbs" target="grade_target">전필</a></li>
                                        <li><a class="menuLink" href="grade_credit_majorElective.hbs" target="grade_target">전선</a></li>
                                    </ul>
                                </nav>
                            </div>
                        </div>
                        <div class="col-md-9">
                            <p align="center">
                                <iframe name="grade_target" src="grade_credit_majorCore.hbs" width=850px height=400px scrolling="auto" frameBorder="0" style="margin-left:50px;"></iframe>
                            </p>
                        </div>
                    </div>

                    <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
                </div>

            </div>
            <div class="row slide ">
                <h1 class="highlight" align="center"><span>이수 성적 추가정보</span></h1>
                <div class="container">
                    <div class="col-md-4">
                        <figure class="snip1283" id="coding">
                            <img src="css/site_coding.png" alt="sample70">
                            <figcaption>
                                <h3>생활코딩</h3>
                                <p> Apache, PHP, MySQL, Python, Ruby, Java, JavaScript, HTML, CSS, 모바일 등 다양한 언어의 기초를 배울 수 있습니다.
                                </p>
                                <a href="https://opentutorials.org" target="_blank" class="read-more">Read More</a>
                            </figcaption>
                        </figure>
                    </div>
                    <div class="col-md-4">
                        <figure class="snip1283" id="codecademy">
                            <img src="css/site_codecademy.png" alt="sample70">
                            <figcaption>
                                <h3>codecademy</h3>
                                <p>해외의 무료 웹프로그래밍 강의 사이트이며, 복잡한 이론이나 설명보단 간단한 예제를 직접 따라하면서 익힐 수 있도록 도와줍니다.


                                </p>
                                <a href="https://www.codecademy.com" target="_blank" class="read-more">Read More</a>
                            </figcaption>
                        </figure>
                    </div>
                    <div class="col-md-4">
                        <figure class="snip1283" id="stackoverflow">
                            <img src="css/site_stackoverflow.png" alt="sample70" />
                            <figcaption>
                                <h3>stackoverflow</h3>
                                <p>여러 에러 상황이나 질문이 올라오면 전 세계의 프로그래머들이 댓글을 달아가며 문제를 해결합니다.
                                </p>
                                <a href="https://stackoverflow.com" target="_blank" class="read-more">Read More</a>
                            </figcaption>
                        </figure>
                    </div>
                    <div class="col-md-4">
                        <figure class="snip1283" id="w3schools">
                            <img src="css/site_w3s.png" alt="sample70" />
                            <figcaption>
                                <h3>w3schools</h3>
                                <p>W3Schools tutorials are really helpful to those beginners who want to learn HTML, XML, PHP and other web designing languages basics.
                                </p>
                                <a href="https://www.w3schools.com" target="_blank" class="read-more">Read More</a>
                            </figcaption>
                        </figure>
                    </div>
                    <div class="col-md-4">
                        <figure class="snip1283" id="koreasw">
                            <img src="css/site_koreasww.png" alt="sample70" />
                            <figcaption>
                                <h3>KOREASW</h3>
                                <p>온라인 소프트웨어 교육은 미래인재연구소(IFT)가 운영하는 온라인 소프트웨어 교육 시스템으로 창의컴퓨팅(Creative Computing)에 관심 있는 모든 사람들의 커뮤니티 입니다.
                                </p>
                                <a href="http://koreasw.org/" target="_blank" class="read-more">Read More</a>
                            </figcaption>
                        </figure>
                    </div>
                    <div class="col-md-4">
                        <figure class="snip1283" id="olc">
                            <img src="css/site_olc.png" alt="sample70" />
                            <figcaption>
                                <h3>OLC</h3>
                                <p>OLC센터는 온∙오프라인 교육을 제공하여 교육대상자의 요구수준을 반영하여 실무능력을 갖춘 인재양성을 위한 교육 플랫폼입니다.
                                </p>
                                <a href="https://olc.kr/main/index.jsp" target="_blank" class="read-more">Read More</a>
                            </figcaption>
                        </figure>
                    </div>

                </div>
                <br><br><br><br><br><br><br><br><br><br>
            </div>

        </div>

    </div>

    <script>
        $(document).ready(function() {
            $("#fullpage").fullpage();
        });

        document.addEventListener("DOMContentLoaded", function() {

            var circleProgress = (function(selector) {
                var wrapper = document.querySelectorAll(selector);
                Array.prototype.forEach.call(wrapper, function(wrapper, i) {
                    var wrapperWidth,
                            wrapperHeight,
                            percent,
                            innerHTML,
                            context,
                            lineWidth,
                            centerX,
                            centerY,
                            radius,
                            newPercent,
                            speed,
                            from,
                            to,
                            duration,
                            start,
                            strokeStyle,
                            text;


                    var getValues = function() {
                        wrapperWidth = parseInt(window.getComputedStyle(wrapper).width);
                        wrapperHeight = wrapperWidth;
                        percent = wrapper.getAttribute('data-cp-percentage');
                        innerHTML = '<span class="percentage"><strong>' + percent + '</strong> %</span><canvas class="circleProgressCanvas" width="' + (wrapperWidth * 2) + '" height="' + wrapperHeight * 2 + '"></canvas>';
                        wrapper.innerHTML = innerHTML;
                        text = wrapper.querySelector(".percentage");
                        canvas = wrapper.querySelector(".circleProgressCanvas");
                        wrapper.style.height = canvas.style.width = canvas.style.height = wrapperWidth + "px";
                        context = canvas.getContext('2d');
                        centerX = canvas.width / 2;
                        centerY = canvas.height / 2;
                        newPercent = 0;
                        speed = 1;
                        from = 0;
                        to = percent;
                        duration = 1000;
                        lineWidth = 25;
                        radius = canvas.width / 2 - lineWidth;
                        strokeStyle = wrapper.getAttribute('data-cp-color');
                        start = new Date().getTime();
                    };

                    function animate() {
                        requestAnimationFrame(animate);
                        var time = new Date().getTime() - start;
                        if (time <= duration) {
                            var x = easeInOutQuart(time, from, to - from, duration);
                            newPercent = x;
                            text.innerHTML = percent + " / 4.5";
                            //if ($(".menu1")) menu1.innerHTML = Math.round(newPercent) + " %"; // % 뺌 수정

                            drawArc();
                        }
                    }

                    function drawArc() {
                        var circleStart = 1.5 * Math.PI;
                        var circleEnd = circleStart + (newPercent / 2.25) * Math.PI;
                        context.clearRect(0, 0, canvas.width, canvas.height);
                        context.beginPath();
                        context.arc(centerX, centerY, radius, circleStart, 4 * Math.PI, false);
                        context.lineWidth = lineWidth;
                        context.strokeStyle = "#ddd";
                        context.stroke();
                        context.beginPath();
                        context.arc(centerX, centerY, radius, circleStart, circleEnd, false);
                        context.lineWidth = lineWidth;
                        context.strokeStyle = strokeStyle;
                        context.stroke();

                    }
                    var update = function() {
                        getValues();
                        animate();
                    }
                    update();

                    var btnUpdate = document.querySelectorAll(".btn-update")[0];
                    btnUpdate.addEventListener("click", function() {
                        wrapper.setAttribute("data-cp-percentage", Math.round(getRandom(5, 95)));
                        update();
                    });
                    wrapper.addEventListener("click", function() {
                        update();
                    });

                    var resizeTimer;
                    window.addEventListener("resize", function() {
                        clearTimeout(resizeTimer);
                        resizeTimer = setTimeout(function() {
                            clearTimeout(resizeTimer);
                            start = new Date().getTime();
                            update();
                        }, 250);
                    });
                });

                //
                // http://easings.net/#easeInOutQuart
                //  t: current time
                //  b: beginning value
                //  c: change in value
                //  d: duration
                //
                function easeInOutQuart(t, b, c, d) {
                    if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;
                    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;
                }

            });

            circleProgress('.counter');

            // Gibt eine Zufallszahl zwischen min (inklusive) und max (exklusive) zurück
            function getRandom(min, max) {
                return Math.random() * (max - min) + min;
            }
        });

        document.addEventListener("DOMContentLoaded", function() {

            var circleProgress = (function(selector) {
                var wrapper = document.querySelectorAll(selector);
                Array.prototype.forEach.call(wrapper, function(wrapper, i) {
                    var wrapperWidth,
                            wrapperHeight,
                            percent,
                            innerHTML,
                            context,
                            lineWidth,
                            centerX,
                            centerY,
                            radius,
                            newPercent,
                            speed,
                            from,
                            to,
                            duration,
                            start,
                            strokeStyle,
                            text;


                    var getValues = function() {
                        wrapperWidth = parseInt(window.getComputedStyle(wrapper).width);
                        wrapperHeight = wrapperWidth;
                        percent = wrapper.getAttribute('data-cp-percentage');
                        innerHTML = '<span class="percentage"><strong>' + percent + '</strong> %</span><canvas class="circleProgressCanvas" width="' + (wrapperWidth * 2) + '" height="' + wrapperHeight * 2 + '"></canvas>';
                        wrapper.innerHTML = innerHTML;
                        text = wrapper.querySelector(".percentage");
                        canvas = wrapper.querySelector(".circleProgressCanvas");
                        wrapper.style.height = canvas.style.width = canvas.style.height = wrapperWidth + "px";
                        context = canvas.getContext('2d');
                        centerX = canvas.width / 2;
                        centerY = canvas.height / 2;
                        newPercent = 0;
                        speed = 1;
                        from = 0;
                        to = percent;
                        duration = 1000;
                        lineWidth = 25;
                        radius = canvas.width / 2 - lineWidth;
                        strokeStyle = wrapper.getAttribute('data-cp-color');
                        start = new Date().getTime();
                    };

                    function animate() {
                        requestAnimationFrame(animate);
                        var time = new Date().getTime() - start;
                        if (time <= duration) {
                            var x = easeInOutQuart(time, from, to - from, duration);
                            newPercent = x;
                            text.innerHTML = Math.round(newPercent);
                            //if ($(".menu1")) menu1.innerHTML = Math.round(newPercent) + " %"; // % 뺌 수정

                            drawArc();
                        }
                    }

                    function drawArc() {
                        var circleStart = 1.5 * Math.PI;
                        var circleEnd = circleStart + (newPercent / 15) * Math.PI;
                        context.clearRect(0, 0, canvas.width, canvas.height);
                        context.beginPath();
                        context.arc(centerX, centerY, radius, circleStart, 4 * Math.PI, false);
                        context.lineWidth = lineWidth;
                        context.strokeStyle = "#ddd";
                        context.stroke();
                        context.beginPath();
                        context.arc(centerX, centerY, radius, circleStart, circleEnd, false);
                        context.lineWidth = lineWidth;
                        context.strokeStyle = strokeStyle;
                        context.stroke();

                    }
                    var update = function() {
                        getValues();
                        animate();
                    }
                    update();

                    var btnUpdate = document.querySelectorAll(".btn-update")[0];
                    btnUpdate.addEventListener("click", function() {
                        wrapper.setAttribute("data-cp-percentage", Math.round(getRandom(5, 95)));
                        update();
                    });
                    wrapper.addEventListener("click", function() {
                        update();
                    });

                    var resizeTimer;
                    window.addEventListener("resize", function() {
                        clearTimeout(resizeTimer);
                        resizeTimer = setTimeout(function() {
                            clearTimeout(resizeTimer);
                            start = new Date().getTime();
                            update();
                        }, 250);
                    });
                });

                //
                // http://easings.net/#easeInOutQuart
                //  t: current time
                //  b: beginning value
                //  c: change in value
                //  d: duration
                //
                function easeInOutQuart(t, b, c, d) {
                    if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;
                    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;
                }

            });

            circleProgress('.counter2');

            // Gibt eine Zufallszahl zwischen min (inklusive) und max (exklusive) zurück
            function getRandom(min, max) {
                return Math.random() * (max - min) + min;
            }
        });

        document.addEventListener("DOMContentLoaded", function() {

            var circleProgress = (function(selector) {
                var wrapper = document.querySelectorAll(selector);
                Array.prototype.forEach.call(wrapper, function(wrapper, i) {
                    var wrapperWidth,
                            wrapperHeight,
                            percent,
                            innerHTML,
                            context,
                            lineWidth,
                            centerX,
                            centerY,
                            radius,
                            newPercent,
                            speed,
                            from,
                            to,
                            duration,
                            start,
                            strokeStyle,
                            text;


                    var getValues = function() {
                        wrapperWidth = parseInt(window.getComputedStyle(wrapper).width);
                        wrapperHeight = wrapperWidth;
                        percent = wrapper.getAttribute('data-cp-percentage');
                        innerHTML = '<span class="percentage"><strong>' + percent + '</strong> %</span><canvas class="circleProgressCanvas" width="' + (wrapperWidth * 2) + '" height="' + wrapperHeight * 2 + '"></canvas>';
                        wrapper.innerHTML = innerHTML;
                        text = wrapper.querySelector(".percentage");
                        canvas = wrapper.querySelector(".circleProgressCanvas");
                        wrapper.style.height = canvas.style.width = canvas.style.height = wrapperWidth + "px";
                        context = canvas.getContext('2d');
                        centerX = canvas.width / 2;
                        centerY = canvas.height / 2;
                        newPercent = 0;
                        speed = 1;
                        from = 0;
                        to = percent;
                        duration = 1000;
                        lineWidth = 25;
                        radius = canvas.width / 2 - lineWidth;
                        strokeStyle = wrapper.getAttribute('data-cp-color');
                        start = new Date().getTime();
                    };

                    function animate() {
                        requestAnimationFrame(animate);
                        var time = new Date().getTime() - start;
                        if (time <= duration) {
                            var x = easeInOutQuart(time, from, to - from, duration);
                            newPercent = x;
                            text.innerHTML = Math.round(newPercent);
                            //if ($(".menu1")) menu1.innerHTML = Math.round(newPercent) + " %"; // % 뺌 수정

                            drawArc();
                        }
                    }

                    function drawArc() {
                        var circleStart = 1.5 * Math.PI;
                        var circleEnd = circleStart + (newPercent / 25) * Math.PI;
                        context.clearRect(0, 0, canvas.width, canvas.height);
                        context.beginPath();
                        context.arc(centerX, centerY, radius, circleStart, 4 * Math.PI, false);
                        context.lineWidth = lineWidth;
                        context.strokeStyle = "#ddd";
                        context.stroke();
                        context.beginPath();
                        context.arc(centerX, centerY, radius, circleStart, circleEnd, false);
                        context.lineWidth = lineWidth;
                        context.strokeStyle = strokeStyle;
                        context.stroke();

                    }
                    var update = function() {
                        getValues();
                        animate();
                    }
                    update();

                    var btnUpdate = document.querySelectorAll(".btn-update")[0];
                    btnUpdate.addEventListener("click", function() {
                        wrapper.setAttribute("data-cp-percentage", Math.round(getRandom(5, 95)));
                        update();
                    });
                    wrapper.addEventListener("click", function() {
                        update();
                    });

                    var resizeTimer;
                    window.addEventListener("resize", function() {
                        clearTimeout(resizeTimer);
                        resizeTimer = setTimeout(function() {
                            clearTimeout(resizeTimer);
                            start = new Date().getTime();
                            update();
                        }, 250);
                    });
                });

                //
                // http://easings.net/#easeInOutQuart
                //  t: current time
                //  b: beginning value
                //  c: change in value
                //  d: duration
                //
                function easeInOutQuart(t, b, c, d) {
                    if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;
                    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;
                }

            });

            circleProgress('.counter3');

            // Gibt eine Zufallszahl zwischen min (inklusive) und max (exklusive) zurück
            function getRandom(min, max) {
                return Math.random() * (max - min) + min;
            }
        });

        document.addEventListener("DOMContentLoaded", function() {

            var circleProgress = (function(selector) {
                var wrapper = document.querySelectorAll(selector);
                Array.prototype.forEach.call(wrapper, function(wrapper, i) {
                    var wrapperWidth,
                            wrapperHeight,
                            percent,
                            innerHTML,
                            context,
                            lineWidth,
                            centerX,
                            centerY,
                            radius,
                            newPercent,
                            speed,
                            from,
                            to,
                            duration,
                            start,
                            strokeStyle,
                            text;


                    var getValues = function() {
                        wrapperWidth = parseInt(window.getComputedStyle(wrapper).width);
                        wrapperHeight = wrapperWidth;
                        percent = wrapper.getAttribute('data-cp-percentage');
                        innerHTML = '<span class="percentage"><strong>' + percent + '</strong> %</span><canvas class="circleProgressCanvas" width="' + (wrapperWidth * 2) + '" height="' + wrapperHeight * 2 + '"></canvas>';
                        wrapper.innerHTML = innerHTML;
                        text = wrapper.querySelector(".percentage");
                        canvas = wrapper.querySelector(".circleProgressCanvas");
                        wrapper.style.height = canvas.style.width = canvas.style.height = wrapperWidth + "px";
                        context = canvas.getContext('2d');
                        centerX = canvas.width / 2;
                        centerY = canvas.height / 2;
                        newPercent = 0;
                        speed = 1;
                        from = 0;
                        to = percent;
                        duration = 1000;
                        lineWidth = 25;
                        radius = canvas.width / 2 - lineWidth;
                        strokeStyle = wrapper.getAttribute('data-cp-color');
                        start = new Date().getTime();
                    };

                    function animate() {
                        requestAnimationFrame(animate);
                        var time = new Date().getTime() - start;
                        if (time <= duration) {
                            var x = easeInOutQuart(time, from, to - from, duration);
                            newPercent = x;
                            text.innerHTML = Math.round(newPercent) + " / 1000";
                            //if ($(".menu1")) menu1.innerHTML = Math.round(newPercent) + " %"; // % 뺌 수정

                            drawArc();
                        }
                    }

                    function drawArc() {
                        var circleStart = 1.5 * Math.PI;
                        var circleEnd = circleStart + (newPercent / 500) * Math.PI;
                        context.clearRect(0, 0, canvas.width, canvas.height);
                        context.beginPath();
                        context.arc(centerX, centerY, radius, circleStart, 4 * Math.PI, false);
                        context.lineWidth = lineWidth;
                        context.strokeStyle = "#ddd";
                        context.stroke();
                        context.beginPath();
                        context.arc(centerX, centerY, radius, circleStart, circleEnd, false);
                        context.lineWidth = lineWidth;
                        context.strokeStyle = strokeStyle;
                        context.stroke();

                    }
                    var update = function() {
                        getValues();
                        animate();
                    }
                    update();

                    var btnUpdate = document.querySelectorAll(".btn-update")[0];
                    btnUpdate.addEventListener("click", function() {
                        wrapper.setAttribute("data-cp-percentage", Math.round(getRandom(5, 95)));
                        update();
                    });
                    wrapper.addEventListener("click", function() {
                        update();
                    });

                    var resizeTimer;
                    window.addEventListener("resize", function() {
                        clearTimeout(resizeTimer);
                        resizeTimer = setTimeout(function() {
                            clearTimeout(resizeTimer);
                            start = new Date().getTime();
                            update();
                        }, 250);
                    });
                });

                //
                // http://easings.net/#easeInOutQuart
                //  t: current time
                //  b: beginning value
                //  c: change in value
                //  d: duration
                //
                function easeInOutQuart(t, b, c, d) {
                    if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;
                    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;
                }

            });

            circleProgress('.counter4');

            // Gibt eine Zufallszahl zwischen min (inklusive) und max (exklusive) zurück
            function getRandom(min, max) {
                return Math.random() * (max - min) + min;
            }
        });
    </script>
</body>

</html>